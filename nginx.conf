##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
upstream websocket {
    server unix:///root/web/promotion_mysite/websocket.sock;
}
server {
	listen 80;
	listen [::]:80;
	server_name 34.84.154.24 pddjf.com;

	 location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
    location /static/ {
        alias /root/web/promotion_mysite/static/;
        expires 30d;
    }

	location / {
        proxy_pass http://127.0.0.1:9009;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
	}
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name pddjf.com; # your domain

    ssl_certificate /etc/letsencrypt/live/pddjf.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pddjf.com/privkey.pem; # managed by Certbot

    location / {
        proxy_pass http://localhost:9009; # or whatever your app listens on
    }
}


